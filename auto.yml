---
-  hosts: localhost
   any_errors_fatal: true
   gather_facts: no

   tasks:
   - name: Update the machine
     tags: upd
     yum:
       update_only: yes


   - name: Install General Essential packages
     tags: essentials
     yum: 
       name: 
         - nano
         - net-tools
         - tcpdump
         - nmap
         - wireshark
         - git
         - wget
         - iproute
         - psmisc
         - yum-utils
         - chrony
         - telnet
         - iptables-services
       state: present

   - name: install several packages after deleting iptables
     tags: iptables
     yum: 
       name: 
         - iptables
         - iproute
         - dhclient
         - plymouth
         - initscripts
         - kbd
         - kexec-tools
         - dracut
         - firewalld
         - iptables-services
       state: present


   - name: Install essential packages for SNORT IDS
     tags: essentials
     yum: 
       name: 
         - flex
         - bison
         - zlib
         - libpcap
         - pcre
         - libdnet
         - libnghttp2
         - daq
         - libdnet-devel
         - libdnet
         - mlocate
       state: latest
 



 #  - name: install SNORT IDS
 #    tags: IDS
 #    shell: cd /root & wget https://www.snort.org/downloads/snort/snort-2.9.19-1.centos.x86_64.rpm


   - name: Get SNORT IDS Link
     tags: IDS  
     get_url:
       url: https://www.snort.org/downloads/snort/snort-2.9.19-1.centos.x86_64.rpm
       dest: /root


   - name: install SNORT IDS
     tags: IDS
     shell: yum localinstall snort-2.9.19-1.centos.x86_64.rpm -y
     args:
       chdir: /root


   - name: tunning
     tags: setttings
     shell: ldconfig


# It says already exists, it seems if you seems install snort with yum, user and group are auto generated.
 #  - name: Creating new group and user 
 #    tags: user
 #    shell: groupadd snort && useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort



   - name: Create the folder structure to house the Snort configuration.
     tags: structure, NTP
     shell: |
       mkdir /usr/local/lib/snort_dynamicrules   
       updatedb      
       timedatectl set-ntp true
       timedatectl set-timezone Europe/Berlin
    # mkdir -p /etc/snort/rules # Already exists
    # mkdir /var/log/snort &&   # Already exists

   - name: Set the permissions for the new directories accordingly.
     tags: permissions
     shell: chmod -R 5775 /etc/snort && chmod -R 5775 /var/log/snort && chmod -R 5775 /usr/local/lib/snort_dynamicrules 
     
   - name: Set the ownership for the new directories accordingly.
     tags: ownership
     shell: chown -R snort:snort /etc/snort && chown -R snort:snort /var/log/snort && chown -R snort:snort /usr/local/lib/snort_dynamicrules
     


   - name: Create new files for the white and blacklists as well as the local rules. 
     tags: lists
     shell: |
       touch /etc/snort/rules/white_list.rules
       touch /etc/snort/rules/black_list.rules
       touch /etc/snort/rules/local.rules
       touch /etc/snort/preproc_rules
       


   - name: download the detection rules & Grabbing the community rules
     tags: det-rules 
     get_url:
       url: https://www.snort.org/rules/community
       dest: ~/community.tar.gz

   - name: copy original conf file
     tags: insert
     shell: cp /etc/snort/snort.conf /root/backup.conf


   - name: Extract the rules and copy them to my configuration folder. 
     tags: extract
     shell: |
       tar -xvf ~/community.tar.gz -C ~/
       cp ~/community-rules/* /etc/snort/rules
       sed -i 's/include \$RULE\_PATH/#include \$RULE\_PATH/' /etc/snort/snort.conf


# last command to comment out some useless lines within the conf file
# They are related to rule files which are not included in the community rules



   - name: Insert line in a file
     tags: ins-1, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^ipvar HOME_NET '
       line: 'ipvar HOME_NET 2001:db8:0:1::0/64'
     

   - name: Insert line in a file
     tags: ins-2, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^ipvar EXTERNAL_NET any'
       line: 'ipvar EXTERNAL_NET !$HOME_NET'
     
   - name: Insert line in a file
     tags: ins-3, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^var SO_RULE_PATH ../so_rules'
       line: 'var SO_RULE_PATH /etc/snort/so_rules'
    

   - name: Insert line in a file
     tags: ins-4, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^var PREPROC_RULE_PATH ../preproc_rules'
       line: 'var PREPROC_RULE_PATH /etc/snort/preproc_rules'

   - name: Insert line in a file
     tags: ins-5, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^var WHITE_LIST_PATH ../rules'
       line: 'var WHITE_LIST_PATH /etc/snort/rules'


   - name: Insert line in a file
     tags: ins-6, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^var BLACK_LIST_PATH ../rules'
       line: 'var BLACK_LIST_PATH /etc/snort/rules'

   - name: Insert line in a file
     tags: ins-7, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^# output unified2: filename merged.log, limit 128, nostamp, mpls_event_types, vlan_event_types'
       line: 'output unified2: filename snort.log, limit 128'

   - name: Insert line in a file
     tags: ins-8, insert
     lineinfile:
       path: /etc/snort/snort.conf
       regexp: '^##include $RULE_PATH/local.rules' # this will not work and will add it will apedn the line to the end,coz two hash cannot be dealt with maybe.
       line: 'include $RULE_PATH/local.rules'
       line: "include $RULE_PATH/local.rules  \n include $RULE_PATH/community.rules"  


   - name: Config SNORT to finction as Inline
     tags: inline
     lineinfile:
       path: /etc/snort/snort.conf
       line: "config daq: afpacket  \n config daq_mode: inline \n config policy_mode: inline \n config daq_var: buffer_size_mb:128"  

# config daq_dir: /usr/local/lib/daq  (this pacth in questionable)

   - name: Sonort Validating 
     tags: link, test
     shell: |
       ln -s /usr/lib64/libdnet.so.1.0.1 /usr/lib64/libdnet.1
       snort -T -i ens34:ens35 -c /etc/snort/snort.conf


# Wenn man inline mode nutzen möchtet, dann muss man zwei interfaces angeben.

#       snort -A console -q -i ens34:ens35 -c /etc/snort/snort.conf -K ascii
# -q quite mode, not to bother with many bullshit.
# -K ascii to log results in different manner in addition to the normanl log.



   - name: Running Snort in the background
     tags: background
     shell: |
       systemctl daemon-reload
       systemctl enable snortd
       systemctl start snortd

   - name: Creteing routing file
     tags: routing
     shell: |
       cd 
       touch networking.sh
       chmod a+x networking.sh
       
   - name: Edit "networking.sh" file
     tags: routing
     lineinfile:
       path: /root/networking.sh
       line: " #!/bin/bash \n echo 1 > /proc/sys/net/ipv4/ip_forward \n echo 1 > /proc/sys/net/ipv6/conf/all/forwarding \n ip link add name ipip6 type ip6tnl local 2001:db8:0:1::1 remote 2001:db8:0:1::2 mode any dev ens34 \n ip link set dev ipip6 up \n ip route add 10.0.0.0/24 dev ipip6 \n iptables -F \n iptables -X \n ip6tables -F \n ip6tables -X \n iptables -t nat -A POSTROUTING -o ens35 -j MASQUERADE"  


   - name: Run networking.sh
     tags: routing
     shell: |
       cd 
       ./networking.sh

#   - name: SNORT & sein Abhängigkeiten löschen
#     tags: Remove-SNORT
#     shell: |
#       yum rm snort -y 
#       yum rm daq -y
#       rm -rf -R /etc/snort -y
#       rm -rf -R /var//log/snort -y
       





# Testing the configuration Abscnitt

# date issue , reboot safe

# sudo snort -A console -i eth0 -u snort -g snort -c /etc/snort/snort.conf


# nano /etc/sysctl.conf
# disable source forwarding
# nano /etc/sysctl.conf
#  net.ipv4.conf.all.rp_filter = 1
# nano /etc/firewalld/firewalld.conf
# it is already configured by defauls "IPv6_rpfilter=yes"


# sysctl -p
# /etc/rc.d/init.d/network restart

# iptables -A INPUT -p tcp --dport 22 -j ACCEPT   [to allow out putty SSH terminal]
# [root@server ~]# iptables -P INPUT DROP   [to drop everything else]


 # iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
 # service iptables save
 # service iptables restart
# Accept packets from trusted IP addresses

# Baisc soultion (MAC filter), works in small LAN network, won't work for WAN network
# iptables -A INPUT -s 192.168.0.4 -m mac --mac-source 00:50:8D:FD:E6:32 -j ACCEPT






# ANother example
# iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT


# TuxCut is a utility that protect linux computers againest arpspoof attacks
# yum install tuxcut

# Reference Doko Datei
# https://upcloud.com/community/tutorials/installing-snort-on-centos/

# https://wiki.centos.org/HowTos/Network/IPTables

